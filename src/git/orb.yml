version: 2.1

description: |
  Some common tasks for working with git and Github

commands:
  shallow-checkout:
    description: Performs a shallow clone of the repository
    parameters:
      init-submodules:
        description: Inits and updates submodules
        default: false
        type: boolean
    steps:
      - run:
          name: Shallow checkout
          command: |
            set -e

            # Workaround old docker images with incorrect $HOME
            # check https://github.com/docker/docker/issues/2968 for details
            if [ "${HOME}" = "/" ]
            then
              export HOME=$(getent passwd $(id -un) | cut -d: -f6)
            fi

            mkdir -p ~/.ssh

            echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
            ' \>> ~/.ssh/known_hosts

            (umask 077; touch ~/.ssh/id_rsa)
            chmod 0600 ~/.ssh/id_rsa
            (cat \<<EOF > ~/.ssh/id_rsa
            $CHECKOUT_KEY
            EOF
            )

            # use git+ssh instead of https
            git config --global url."ssh://git@github.com".insteadOf "https://github.com" || true
            git config --global gc.auto 0 || true

            # Don't download LFS stuff
            export GIT_LFS_SKIP_SMUDGE=1

            if [ -e .git ]
            then
              git remote set-url origin "$CIRCLE_REPOSITORY_URL" || true
            elif [[ "$CIRCLE_BRANCH" =~ pull/[0-9]+$ ]] || [ -z "$CIRCLE_BRANCH" ]
            then
              # We can't clone a single branch for forks
              git clone "$CIRCLE_REPOSITORY_URL" --depth 1 .
            else
              git clone "$CIRCLE_REPOSITORY_URL" --single-branch --branch "$CIRCLE_BRANCH" --depth 1 .
            fi

            if [ -n "$CIRCLE_TAG" ]
            then
              git fetch --force origin "refs/tags/${CIRCLE_TAG}" --depth 1
              git fetch --depth 1 origin tag ${CIRCLE_TAG}
            elif [[ "$CIRCLE_BRANCH" =~ pull/[0-9]+$ ]]
            then
              # Different fetch logic is needed for forks
              git fetch --force origin "${CIRCLE_BRANCH}/head:remotes/origin/${CIRCLE_BRANCH}" --depth 1
            else
              git fetch --force origin "${CIRCLE_BRANCH}:remotes/origin/${CIRCLE_BRANCH}" --depth 1
            fi


            if [ -n "$CIRCLE_TAG" ]
            then
              git reset --hard "$CIRCLE_SHA1"
              git checkout -q "$CIRCLE_TAG"
            elif [ -n "$CIRCLE_BRANCH" ]
            then
              git reset --hard "$CIRCLE_SHA1"
              git checkout -q -B "$CIRCLE_BRANCH"
            fi

            if git cat-file -e "$CIRCLE_SHA1"; then
              git reset --hard "$CIRCLE_SHA1"
            else
              circleci-agent step halt
            fi

            <<# parameters.init-submodules >>
            git submodule init
            git submodule update
            <</ parameters.init-submodules >>

  checkout-as-zip:
    description: Download the repository as a zip using the Github API
    parameters:
      use-merge:
        description: Download the merge if this is a pull request
        default: false
        type: boolean
    steps:
      - run:
          name: Download Github repository as zip
          command:  |
            REF="$CIRCLE_SHA1"
            OUTPUT_DIRECTORY="$CIRCLE_PROJECT_REPONAME-$REF"

            <<# parameters.use-merge >>
            if [ -n "$CIRCLE_PULL_REQUEST" ] && [ "$CIRCLE_BRANCH" != "develop" ]; then
              # Checkout merge if this is a PR
              PR_NUMBER=$(basename $CIRCLE_PULL_REQUEST)
              REF="pull/$PR_NUMBER/head"
              OUTPUT_DIRECTORY="$CIRCLE_PROJECT_REPONAME-pull-$PR_NUMBER-head"
            fi
            <</ parameters.use-merge >>

            cd ~
            # Expand ~ in working directory path path
            WD="${CIRCLE_WORKING_DIRECTORY/#\~/$HOME}"
            rm -rf "$WD"
            curl -s#L "https://github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/archive/$REF.zip" | bsdtar -xvf-
            mv "$OUTPUT_DIRECTORY" "$WD"
